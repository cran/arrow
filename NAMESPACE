# Generated by roxygen2: do not edit by hand

S3method("!=",Object)
S3method("$",RecordBatch)
S3method("$",Table)
S3method("==",Object)
S3method("[",RecordBatch)
S3method("[",Table)
S3method("[[",RecordBatch)
S3method("[[",Table)
S3method(all,equal.Object)
S3method(as.data.frame,RecordBatch)
S3method(as.data.frame,Table)
S3method(as.raw,Buffer)
S3method(as.vector,Array)
S3method(as.vector,ChunkedArray)
S3method(dim,RecordBatch)
S3method(dim,Table)
S3method(head,RecordBatch)
S3method(head,Table)
S3method(length,Array)
S3method(length,ChunkedArray)
S3method(names,RecordBatch)
S3method(names,Table)
S3method(print,"arrow-enum")
S3method(read_message,InputStream)
S3method(read_message,MessageReader)
S3method(read_message,default)
S3method(read_record_batch,Buffer)
S3method(read_record_batch,InputStream)
S3method(read_record_batch,Message)
S3method(read_record_batch,raw)
S3method(read_schema,Buffer)
S3method(read_schema,InputStream)
S3method(read_schema,Message)
S3method(read_schema,raw)
S3method(read_table,RecordBatchFileReader)
S3method(read_table,RecordBatchStreamReader)
S3method(read_table,character)
S3method(read_table,raw)
S3method(tail,RecordBatch)
S3method(tail,Table)
S3method(type,Array)
S3method(type,ChunkedArray)
S3method(type,Column)
S3method(type,default)
S3method(write_arrow,RecordBatchWriter)
S3method(write_arrow,character)
S3method(write_arrow,raw)
export(Array)
export(Buffer)
export(BufferOutputStream)
export(BufferReader)
export(ChunkedArray)
export(Codec)
export(CompressedInputStream)
export(CompressedOutputStream)
export(CompressionType)
export(CsvConvertOptions)
export(CsvParseOptions)
export(CsvReadOptions)
export(CsvTableReader)
export(DateUnit)
export(FeatherTableReader)
export(FeatherTableWriter)
export(Field)
export(FileMode)
export(FileOutputStream)
export(FileStats)
export(FileSystem)
export(FileType)
export(FixedSizeBufferWriter)
export(JsonParseOptions)
export(JsonReadOptions)
export(JsonTableReader)
export(LocalFileSystem)
export(MemoryMappedFile)
export(MessageReader)
export(MessageType)
export(MockOutputStream)
export(ParquetFileReader)
export(ParquetReaderProperties)
export(ParquetVersionType)
export(RandomAccessFile)
export(ReadableFile)
export(RecordBatchFileReader)
export(RecordBatchFileWriter)
export(RecordBatchStreamReader)
export(RecordBatchStreamWriter)
export(Schema)
export(Selector)
export(StatusCode)
export(SubTreeFileSystem)
export(Table)
export(TimeUnit)
export(Type)
export(arrow_available)
export(bool)
export(boolean)
export(buffer)
export(cast_options)
export(chunked_array)
export(contains)
export(date32)
export(date64)
export(decimal)
export(default_memory_pool)
export(dictionary)
export(ends_with)
export(everything)
export(field)
export(float)
export(float16)
export(float32)
export(float64)
export(halffloat)
export(install_arrow)
export(int16)
export(int32)
export(int64)
export(int8)
export(last_col)
export(list_of)
export(matches)
export(mmap_create)
export(mmap_open)
export(null)
export(num_range)
export(one_of)
export(read_arrow)
export(read_csv_arrow)
export(read_delim_arrow)
export(read_feather)
export(read_json_arrow)
export(read_message)
export(read_parquet)
export(read_record_batch)
export(read_schema)
export(read_table)
export(read_tsv_arrow)
export(record_batch)
export(schema)
export(starts_with)
export(string)
export(struct)
export(time32)
export(time64)
export(timestamp)
export(type)
export(uint16)
export(uint32)
export(uint64)
export(uint8)
export(utf8)
export(write_arrow)
export(write_feather)
export(write_parquet)
importFrom(R6,R6Class)
importFrom(Rcpp,sourceCpp)
importFrom(assertthat,assert_that)
importFrom(bit64,print.integer64)
importFrom(bit64,str.integer64)
importFrom(methods,as)
importFrom(purrr,map)
importFrom(purrr,map2)
importFrom(purrr,map_int)
importFrom(rlang,"%||%")
importFrom(rlang,abort)
importFrom(rlang,dots_n)
importFrom(rlang,enquo)
importFrom(rlang,enquos)
importFrom(rlang,is_false)
importFrom(rlang,is_integerish)
importFrom(rlang,list2)
importFrom(rlang,quo_is_null)
importFrom(rlang,warn)
importFrom(tidyselect,contains)
importFrom(tidyselect,ends_with)
importFrom(tidyselect,everything)
importFrom(tidyselect,last_col)
importFrom(tidyselect,matches)
importFrom(tidyselect,num_range)
importFrom(tidyselect,one_of)
importFrom(tidyselect,starts_with)
importFrom(tidyselect,vars_select)
importFrom(utils,head)
importFrom(utils,packageVersion)
importFrom(utils,tail)
useDynLib(arrow, .registration = TRUE)
