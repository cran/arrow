# Generated by roxygen2: do not edit by hand

S3method("!=","arrow::Object")
S3method("==","arrow::Array")
S3method("==","arrow::DataType")
S3method("==","arrow::Field")
S3method("==","arrow::RecordBatch")
S3method("==","arrow::Schema")
S3method("==","arrow::ipc::Message")
S3method(BufferReader,"arrow::Buffer")
S3method(BufferReader,default)
S3method(CompressedInputStream,"arrow::io::InputStream")
S3method(CompressedInputStream,character)
S3method(CompressedInputStream,fs_path)
S3method(CompressedOutputStream,"arrow::io::OutputStream")
S3method(CompressedOutputStream,character)
S3method(CompressedOutputStream,fs_path)
S3method(FeatherTableReader,"arrow::io::RandomAccessFile")
S3method(FeatherTableReader,"arrow::ipc::feather::TableReader")
S3method(FeatherTableReader,character)
S3method(FeatherTableReader,default)
S3method(FeatherTableReader,fs_path)
S3method(FeatherTableWriter,"arrow::io::OutputStream")
S3method(FixedSizeBufferWriter,"arrow::Buffer")
S3method(FixedSizeBufferWriter,default)
S3method(MessageReader,"arrow::io::InputStream")
S3method(MessageReader,default)
S3method(RecordBatchFileReader,"arrow::Buffer")
S3method(RecordBatchFileReader,"arrow::io::RandomAccessFile")
S3method(RecordBatchFileReader,character)
S3method(RecordBatchFileReader,fs_path)
S3method(RecordBatchFileReader,raw)
S3method(RecordBatchFileWriter,"arrow::io::OutputStream")
S3method(RecordBatchFileWriter,character)
S3method(RecordBatchFileWriter,fs_path)
S3method(RecordBatchStreamReader,"arrow::Buffer")
S3method(RecordBatchStreamReader,"arrow::io::InputStream")
S3method(RecordBatchStreamReader,raw)
S3method(RecordBatchStreamWriter,"arrow::io::OutputStream")
S3method(RecordBatchStreamWriter,character)
S3method(RecordBatchStreamWriter,fs_path)
S3method(as.data.frame,"arrow::RecordBatch")
S3method(as.data.frame,"arrow::Table")
S3method(as.raw,"arrow::Buffer")
S3method(buffer,"arrow::Buffer")
S3method(buffer,complex)
S3method(buffer,default)
S3method(buffer,integer)
S3method(buffer,numeric)
S3method(buffer,raw)
S3method(csv_table_reader,"arrow::csv::TableReader")
S3method(csv_table_reader,"arrow::io::InputStream")
S3method(csv_table_reader,character)
S3method(csv_table_reader,default)
S3method(csv_table_reader,fs_path)
S3method(dim,"arrow::RecordBatch")
S3method(dim,"arrow::Table")
S3method(json_table_reader,"arrow::io::InputStream")
S3method(json_table_reader,"arrow::json::TableReader")
S3method(json_table_reader,character)
S3method(json_table_reader,default)
S3method(json_table_reader,fs_path)
S3method(length,"arrow::Array")
S3method(names,"arrow::RecordBatch")
S3method(parquet_file_reader,"arrow::io::RandomAccessFile")
S3method(parquet_file_reader,character)
S3method(parquet_file_reader,fs_path)
S3method(print,"arrow-enum")
S3method(read_message,"arrow::io::InputStream")
S3method(read_message,"arrow::ipc::MessageReader")
S3method(read_message,default)
S3method(read_record_batch,"arrow::Buffer")
S3method(read_record_batch,"arrow::io::InputStream")
S3method(read_record_batch,"arrow::ipc::Message")
S3method(read_record_batch,raw)
S3method(read_schema,"arrow::Buffer")
S3method(read_schema,"arrow::io::InputStream")
S3method(read_schema,"arrow::ipc::Message")
S3method(read_schema,raw)
S3method(read_table,"arrow::ipc::RecordBatchFileReader")
S3method(read_table,"arrow::ipc::RecordBatchStreamReader")
S3method(read_table,character)
S3method(read_table,fs_path)
S3method(read_table,raw)
S3method(type,"arrow::Array")
S3method(type,"arrow::ChunkedArray")
S3method(type,"arrow::Column")
S3method(type,default)
S3method(write_arrow,"arrow::ipc::RecordBatchWriter")
S3method(write_arrow,character)
S3method(write_arrow,fs_path)
S3method(write_arrow,raw)
S3method(write_feather,"arrow::RecordBatch")
S3method(write_feather,data.frame)
S3method(write_feather,default)
S3method(write_feather_RecordBatch,"arrow::io::OutputStream")
S3method(write_feather_RecordBatch,character)
S3method(write_feather_RecordBatch,default)
S3method(write_feather_RecordBatch,fs_path)
export(BufferOutputStream)
export(BufferReader)
export(CompressedInputStream)
export(CompressedOutputStream)
export(CompressionType)
export(DateUnit)
export(FeatherTableReader)
export(FeatherTableWriter)
export(FileMode)
export(FileOutputStream)
export(FixedSizeBufferWriter)
export(MessageReader)
export(MessageType)
export(MockOutputStream)
export(ReadableFile)
export(RecordBatchFileReader)
export(RecordBatchFileWriter)
export(RecordBatchStreamReader)
export(RecordBatchStreamWriter)
export(StatusCode)
export(TimeUnit)
export(Type)
export(array)
export(arrow_available)
export(boolean)
export(buffer)
export(cast_options)
export(chunked_array)
export(compression_codec)
export(contains)
export(csv_convert_options)
export(csv_parse_options)
export(csv_read_options)
export(csv_table_reader)
export(date32)
export(date64)
export(decimal)
export(default_memory_pool)
export(dictionary)
export(ends_with)
export(everything)
export(field)
export(float16)
export(float32)
export(float64)
export(install_arrow)
export(int16)
export(int32)
export(int64)
export(int8)
export(json_parse_options)
export(json_read_options)
export(json_table_reader)
export(last_col)
export(list_of)
export(matches)
export(mmap_create)
export(mmap_open)
export(null)
export(num_range)
export(one_of)
export(parquet_arrow_reader_properties)
export(parquet_file_reader)
export(read_arrow)
export(read_csv_arrow)
export(read_delim_arrow)
export(read_feather)
export(read_json_arrow)
export(read_message)
export(read_parquet)
export(read_record_batch)
export(read_schema)
export(read_table)
export(read_tsv_arrow)
export(record_batch)
export(schema)
export(starts_with)
export(struct)
export(table)
export(time32)
export(time64)
export(timestamp)
export(type)
export(uint16)
export(uint32)
export(uint64)
export(uint8)
export(utf8)
export(write_arrow)
export(write_feather)
export(write_feather_RecordBatch)
export(write_parquet)
importFrom(R6,R6Class)
importFrom(Rcpp,sourceCpp)
importFrom(assertthat,assert_that)
importFrom(bit64,print.integer64)
importFrom(bit64,str.integer64)
importFrom(purrr,map)
importFrom(purrr,map2)
importFrom(purrr,map_int)
importFrom(rlang,"%||%")
importFrom(rlang,abort)
importFrom(rlang,dots_n)
importFrom(rlang,enquo)
importFrom(rlang,enquos)
importFrom(rlang,is_false)
importFrom(rlang,list2)
importFrom(rlang,quo_is_null)
importFrom(rlang,warn)
importFrom(tidyselect,contains)
importFrom(tidyselect,ends_with)
importFrom(tidyselect,everything)
importFrom(tidyselect,last_col)
importFrom(tidyselect,matches)
importFrom(tidyselect,num_range)
importFrom(tidyselect,one_of)
importFrom(tidyselect,starts_with)
importFrom(tidyselect,vars_select)
importFrom(utils,packageDescription)
importFrom(utils,packageVersion)
useDynLib(arrow, .registration = TRUE)
